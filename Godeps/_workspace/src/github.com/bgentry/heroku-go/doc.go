// Copyright (c) 2013 Blake Gentry. All rights reserved. Use of
// this source code is governed by an MIT license that can be
// found in the LICENSE file.

/*
Package heroku is a client interface to the Heroku API.

Background

This package provides a complete interface to all of the Heroku Platform API v3
actions, and is almost entirely auto-generated based on the API's JSON Schema.
The exceptions are the files heroku.go, heroku_test.go, and app_test.go, as well
as the generator itself. All models are auto-generated by the Ruby script in
gen/gen.rb.

The client leverages Go's powerful net/http Client. That means that,
out-of-the-box, it has keep-alive support and the ability to handle many
concurrent requests from different goroutines.

Installation

This package is targeted towards Go 1.2 or later, though it may work on
earlier versions as well.

Run `go get github.com/bgentry/heroku-go` to download, build, and install the
package.

Getting Started

To use the client, first add it to your Go file's imports list:

  import (
    "github.com/bgentry/heroku-go"
  )

Then create a Client object and make calls to it:

  client := heroku.Client{Usernam: "email@me.com", Password: "my-api-key"}
  app, err := client.AppCreate(heroku.AppCreateOpts{})
  if err != nil {
    panic(err)
  }
  fmt.Println("Created", app.Name)

That's it! Here is a more advanced example that also sets some options on the
new app:

  name := "myapp"
  region := "region"

  // optional values need to be pointers
  opts := heroku.AppCreateOpts{Name: &name, Region: &region}
  app2, err := client.AppCreate(opts) // Create an app with options set
  if err != nil {
    // if this is a heroku.Error, it will contain details about the error
    if hkerr, ok := err.(heroku.Error); ok {
      panic(fmt.Sprintf("Error id=%s message=%q", hkerr.Id, hkerr))
    }
  }
  fmt.Printf("created app2: name=%s region=%s", app2.Name, app2.Region.Name)

  // Output:
  // created app1: name=dodging-samurai-42 region=us
  // created app2: name=myapp region=eu

*/
package heroku
